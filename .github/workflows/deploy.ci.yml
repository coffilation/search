name: Deploy

on:
  release:
    types:
      - published

jobs:
  Prepare:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          path: node_modules
          key: node_modules-${{ hashFiles('./yarn.lock') }}
      - run: yarn install --immutable

  ESLint:
    needs: Prepare
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          path: node_modules
          key: node_modules-${{ hashFiles('./yarn.lock') }}
      - run: yarn ci:lint:eslint

  Prettier:
    needs: Prepare
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          path: node_modules
          key: node_modules-${{ hashFiles('./yarn.lock') }}
      - run: yarn ci:lint:prettier

  Push:
    needs: [ESLint, Prettier]
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          push: true
          file: Dockerfile
          tags: xalvaine/coffilation-search:${{ github.ref_name }}

  Deploy:
    needs: Push
    runs-on: ubuntu-latest
    steps:
      - uses: appleboy/ssh-action@v0.1.4
        env:
          VERSION: ${{ github.ref_name }}
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          envs: VERSION
          script: |
            set -e
            export SEARCH_VERSION=$VERSION
            export NVM_DIR="$HOME/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
            cd /home/github/coffilation-deploy/services/backend
            git fetch origin main
            git reset --hard origin/main
            cd ../..
            docker image prune -a -f --filter "until=24h"
            docker compose up -d search --no-build --remove-orphans
